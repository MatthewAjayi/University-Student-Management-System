@model University_Student_Management_System.Models.UniAdmin

@{
    ViewBag.Title = "Register";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="d-flex justify-content-center align-items-center" style="margin-top: 100px;">
        <div class="card" style="width: 600px; height: 450px;">
            <div class="card-body">
                <h5 class="card-title" style="text-align: left; margin-bottom: 25px;">Register</h5>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="d-flex justify-content-start align-items-start">
                    <div class="container" style="max-width: 400px;">
                        <div class="form-group">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.UniversityName, htmlAttributes: new { style = "padding-right: 10px;" })
                                @Html.EditorFor(model => model.UniversityName)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.UniversityName, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { style = "padding-right: 50px;" })
                                @Html.EditorFor(model => model.FirstName)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { style = "padding-right: 55px;" })
                                @Html.EditorFor(model => model.LastName)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { style = "padding-right: 27px;" })
                                @Html.EditorFor(model => model.EmailAddress)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { style = "padding-right: 28px;" })
                                @Html.EditorFor(model => model.ConfirmEmail)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { style = "padding-right: 60px;" })
                                @Html.EditorFor(model => model.Password)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                @Html.LabelFor(model => model.ConfirmPassword)
                                @Html.EditorFor(model => model.ConfirmPassword)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="d-flex justify-content-center align-items-center">
                                <!-- Container around the button -->
                                <input type="submit" value="Login" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (TempData["Fail"] != null)
            {
                <div class="toast-body">
                    <p>@TempData["Fail"]</p>
                </div>
            }

        </div>
    </div>

@*<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UniversityName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UniversityName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UniversityName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default btn-outline-success" />
        </div>
    </div>
    @if (TempData["fail"] != null)
    {
        <div class="toast-body">
            <p>@TempData["fail"]</p>
        </div>

    }
</div>*@
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
