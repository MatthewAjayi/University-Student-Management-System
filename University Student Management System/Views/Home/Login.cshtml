@model University_Student_Management_System.Models.UniAdmin

@{
    ViewBag.Title = "Login";
}

@*<h2>Login</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="d-flex justify-content-center align-items-center" style="margin-top: 200px;">
    <div class="card" style="width: 600px; height: 250px;">
        <div class="card-body">
            <h5 class="card-title" style="text-align: left; margin-bottom: 25px;">Login</h5>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="d-flex justify-content-center">
                <div class="container" style="max-width: 400px;">
                    <div class="form-group">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.EmailAddress)
                            @Html.EditorFor(model => model.EmailAddress)

                        </div>
                        <div>
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { style = "padding-right: 32px;" })
                            @Html.EditorFor(model => model.Password)

                        </div>
                        <div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="d-flex justify-content-center align-items-center">
                            <!-- Container around the button -->
                            <input type="submit" value="Login" class="btn btn-primary" />
                        </div>
                        <div class="d-flex justify-content-center align-items-center" style="margin-top:10px">
                            <p>
                                @Html.ActionLink("Dont have an account? Register here", "Register")
                            </p>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        @if (TempData["Fail"] != null)
        {
            <div class="toast-body">
                <p>@TempData["Fail"]</p>
            </div>
        }

    </div>
</div>

@*<div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn default" />
            </div>
        </div>

        @if (TempData["Fail"] != null)
        {
            <div class="toast-body">
                <p>@TempData["Fail"]</p>
            </div>
        }

    </div>*@
}

<style>
    .input-1 input {
        padding-right:34px;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
