@model University_Student_Management_System.Models.UniStudent

@{
    ViewBag.Title = "Add Student";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<h2>Register A New Student</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3 row">
            @Html.LabelFor(model => model.DegreeName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.DegreeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DegreeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.AdmissionYear, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.AdmissionYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdmissionYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.AttendanceFee, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.AttendanceFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttendanceFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.StudentFirstName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.StudentFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.StudentLastName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.StudentLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.StudentEmailAddress, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.StudentEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentEmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.ConfirmStudentEmail, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.ConfirmStudentEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmStudentEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-10" style="margin-top: 20px; margin-bottom:80px;">
                <button type="submit" class="btn btn-primary">
                    Add Student <i class="bi bi-plus-circle align-top" style="margin-bottom: 1px;"></i>
                </button>
            </div>
        </div>

        @if (TempData["Fail"] != null)
        {
            <div class="toast-body">
                <p>@TempData["Fail"]</p>
            </div>
        }

        @if (TempData["Success"] != null)
        {
            <div class="toast-body">
                <p>@TempData["Success"]</p>
            </div>
        }

    </div>

}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
